/* Autogenerated - do not fiddle */
            if(typeof(Contracts) === "undefined") var Contracts={};
            (function(module, Contracts) {
                var data = {
                    address: "0x9e8fecf5659e3c258e59ce82de2675dee8318cc6",
                    network: "browser",
                    endpoint: "http://ethereum-studio-browser",
                    abi: [
    {
        "constant": true,
        "inputs": [
            {
                "name": "_indice",
                "type": "uint256"
            }
        ],
        "name": "comptabiliser",
        "outputs": [
            {
                "name": "",
                "type": "int256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "demissAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_indice",
                "type": "uint256"
            }
        ],
        "name": "closeDecision",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_user",
                "type": "address"
            }
        ],
        "name": "blamer",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "nomAssemblee",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "rejoindre",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_description",
                "type": "string"
            }
        ],
        "name": "proposerDecision",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "decisions",
        "outputs": [
            {
                "name": "description",
                "type": "string"
            },
            {
                "name": "votePour",
                "type": "uint256"
            },
            {
                "name": "voteContre",
                "type": "uint256"
            },
            {
                "name": "dateFin",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_user",
                "type": "address"
            }
        ],
        "name": "nommerAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_indice",
                "type": "uint256"
            },
            {
                "name": "_value",
                "type": "bool"
            }
        ],
        "name": "voter",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    }
]
                };
                Contracts["Dassembly"] = data;
                console.log(data);
                module.exports = data;
            })((typeof(module) === "undefined" ? {} : module), Contracts);